sources:
# Home Assistant
- hass:
    url: "ws://your.HASS.API.URL.here"
    auth_token: "your_token_here"
    plugs:
        # Scaled attribute (dimmer setting) example
        - Kitchen_Lights:
            alias: "Kitchen Lights"
            entity_id: light.kitchen_main_lights
            mac: 53:75:31:f6:4b:01
            off_usage: 0
            min_watts: 0
            max_watts: 42
            attribute_min: 0
            attribute_max: 255
            attribute: brightness
            off_state_value: off

        # Direct power usage reporting example
        - Pump_Power_Meter:
            alias: "Sump Pump Power Meter"
            entity_id: sensor.sump_pump
            mac: 53:75:31:f6:4b:02
            # Or, if the power usage value is buried in the state update, something like:
            # power_keypath: "state/usage/power"

        # Example with an "off" vampire consumption
        - Outdoor_Lights:
            alias: "Outdoor Lights"
            entity_id: light.outdoor_deck_lights
            mac: 53:75:31:f6:4b:03
            off_usage: 4  # Represents a vampire load when "off"
            min_watts: 10
            max_watts: 60
            attribute_min: 0
            attribute_max: 255
            attribute: brightness
            off_state_value: off

        # Binary on/off state-based usage device
        - Dehumidifier:
            alias: "Dehumidifier"
            entity_id: switch.dehumidifier
            mac: 53:75:31:f6:4b:04
            off_usage: 0
            max_watts: 42  # Wattage used for 'on' state
            on_state_value: "on"
            off_state_value: "off"

# MQTT
- mqtt:
    host: "your.mqtt.broker"
    port: 1883       # Optional
    username: admin  # Optional
    password: supersecret1  # Optional
    plugs:
        # Direct power reporting example
        - UPS:
            mac: 53:75:31:f6:4d:01
            alias: "UPS Backup"
            power_topic: server_ups/usage  # Value at this topic should be numeric and units of watts!
        # Direct power, with state
        - VacuumCharger:
            alias: "Vacuum Charger"
            mac: 53:75:31:f6:4d:02
            power_topic: vacuum/usage
            state_topic: vacuum/charging_state
            on_state_value: "charging"
            off_state_value: "not charging"
            off_usage: 1  # 1W vampire draw, reported when the state topic value is "not charging"
        # Scaled attribute (dimmer setting) example
        - Porch_Light:
            alias: "Back Porch Light"
            mac: 53:75:31:f6:4d:03
            attribute_topic: "lights/porch/brightness"
            attribute_min: 0
            attribute_max: 255
            min_watts: 0
            max_watts: 120
            timeout_duration: 3600  # Seconds
                # Use If the device will normally publish updates on at least a regular interval, and you
                #  want to assume the "off" state if it misses that interval (*technically* this
                #  should be done via MQTT's Last Will & Testament feature...)

# Static
  - static:
      plugs:
      - NAS:
          mac: 53:75:31:f6:4c:01
          max_watts: 15
          alias: "NAS Server"
          skip_rate: 3
      - Fan:
          mac: 53:75:31:f6:4c:02
          max_watts: 5
          alias: "Ceiling Fan"

# Mutable
  - mutable:
      plugs:
      - mutable1:
          alias: "Mutable 1"
          mac: 53:75:31:f6:5c:02
          power: 12

# Aggregate
  - aggregate:
      plugs:
      - agg1:
          alias: "Kitchen Aggregate"
          mac: 50:c7:bf:f6:4e:01
          # Specify plug ID values (keys) to aggregate and report as a single value
          # Aggregate plug will update dynamically as the element reported powers change!
          # Useful to stay under the ~20 plug Sense limit
          elements:
            - Fan
            - Kitchen_Lights